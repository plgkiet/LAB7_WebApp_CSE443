// <auto-generated />
using System;
using LAB3_WEBAPP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LAB3_WEBAPP.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LAB3_WEBAPP.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dale",
                            IsActive = true,
                            LastName = "Carnegie"
                        },
                        new
                        {
                            AuthorId = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Saint",
                            IsActive = true,
                            LastName = "Exupery"
                        },
                        new
                        {
                            AuthorId = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Rosie",
                            IsActive = true,
                            LastName = "Nguyễn"
                        },
                        new
                        {
                            AuthorId = 4,
                            CreatedDate = new DateTime(2025, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nguyên",
                            IsActive = true,
                            LastName = "Khải"
                        },
                        new
                        {
                            AuthorId = 5,
                            CreatedDate = new DateTime(2025, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nguyễn",
                            IsActive = true,
                            LastName = "Ngọc Ký"
                        },
                        new
                        {
                            AuthorId = 6,
                            CreatedDate = new DateTime(2025, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nguyễn",
                            IsActive = true,
                            LastName = "Hoàng Tình"
                        },
                        new
                        {
                            AuthorId = 7,
                            CreatedDate = new DateTime(2025, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nguyễn",
                            IsActive = true,
                            LastName = "Ngọc Ánh"
                        },
                        new
                        {
                            AuthorId = 8,
                            CreatedDate = new DateTime(2025, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nguyễn",
                            IsActive = true,
                            LastName = "Vỹ"
                        });
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.Book.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("AvailableCopies")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PublishedYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TotalCopies")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            AvailableCopies = 0,
                            CategoryId = 1,
                            CoverImage = "book1.png",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pdf = "book.pdf",
                            Title = "Đắc Nhân Tâm",
                            TotalCopies = 0
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2,
                            AvailableCopies = 0,
                            CategoryId = 2,
                            CoverImage = "book2.png",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pdf = "book.pdf",
                            Title = "Hoàng Tử Bé",
                            TotalCopies = 0
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 3,
                            AvailableCopies = 0,
                            CategoryId = 3,
                            CoverImage = "book3.png",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pdf = "book.pdf",
                            Title = "Ta ba lô trên đất Á",
                            TotalCopies = 0
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 4,
                            AvailableCopies = 0,
                            CategoryId = 1,
                            CoverImage = "book4.png",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pdf = "book.pdf",
                            Title = "Vượt Bẫy Cảm Xúc",
                            TotalCopies = 0
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 5,
                            AvailableCopies = 0,
                            CategoryId = 2,
                            CoverImage = "book5.png",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pdf = "book.pdf",
                            Title = "Tôi đi học",
                            TotalCopies = 0
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 6,
                            AvailableCopies = 0,
                            CategoryId = 3,
                            CoverImage = "book6.png",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pdf = "book.pdf",
                            Title = "Giã biệt hoang vu",
                            TotalCopies = 0
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 7,
                            AvailableCopies = 0,
                            CategoryId = 2,
                            CoverImage = "book7.png",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pdf = "book.pdf",
                            Title = "Tôi thấy hoa vàng trên cỏ xanh",
                            TotalCopies = 0
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 8,
                            AvailableCopies = 0,
                            CategoryId = 2,
                            CoverImage = "book8.png",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pdf = "book.pdf",
                            Title = "Chiếc áo cưới màu hồng",
                            TotalCopies = 0
                        });
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.Carousel", b =>
                {
                    b.Property<int>("CarouselId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarouselId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LinkURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CarouselId");

                    b.ToTable("Carousels");

                    b.HasData(
                        new
                        {
                            CarouselId = 1,
                            CreatedDate = new DateTime(2025, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1",
                            ImageURL = "carousel_images/1.png",
                            IsActive = true,
                            Order = 1,
                            Title = "1",
                            UpdatedDate = new DateTime(2025, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CarouselId = 2,
                            CreatedDate = new DateTime(2025, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2",
                            ImageURL = "carousel_images/2.png",
                            IsActive = true,
                            Order = 2,
                            Title = "2",
                            UpdatedDate = new DateTime(2025, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Personal development and self-help books",
                            IsActive = true,
                            Name = "Self-help"
                        },
                        new
                        {
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fiction and literary works",
                            IsActive = true,
                            Name = "Literature"
                        },
                        new
                        {
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Books about travel and exploration",
                            IsActive = true,
                            Name = "Travel"
                        });
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoanId");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            LoanId = 1,
                            BookId = 1,
                            DueDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoanDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            UserId = 1
                        },
                        new
                        {
                            LoanId = 2,
                            BookId = 3,
                            DueDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoanDate = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            UserId = 2
                        },
                        new
                        {
                            LoanId = 3,
                            BookId = 5,
                            DueDate = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoanDate = new DateTime(2025, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "Member"
                        });
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("ActiveCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "123 Đường ABC, Bình Dương",
                            Avatar = "avatars/user1.png",
                            CreatedDate = new DateTime(2025, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            Fullname = "Nguyễn Văn A",
                            IsActive = true,
                            IsDeleted = false,
                            IsLocked = false,
                            Password = "$2a$11$lpIJVZRmA94ZEbPzWx61r./7yq/NaJbIxSDgRAbNJ0r9uptRo82lW",
                            Phone = "0909123456",
                            Status = 1,
                            UserCode = "USR001",
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            Address = "456 Đường XYZ, TP.HCM",
                            Avatar = "avatars/user2.png",
                            CreatedDate = new DateTime(2025, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thib@example.com",
                            Fullname = "Trần Thị B",
                            IsActive = true,
                            IsDeleted = false,
                            IsLocked = false,
                            Password = "$2a$11$DO6pmHlIENmuldPySmnZ5OVRhDFqvVzo04iKun58oZRPbJMYANRZO",
                            Phone = "0988765432",
                            Status = 0,
                            UserCode = "USR002",
                            Username = "mem1"
                        },
                        new
                        {
                            UserId = 3,
                            Address = "789 Phố QWE, Hà Nội",
                            Avatar = "avatars/user3.png",
                            CreatedDate = new DateTime(2025, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vanc@example.com",
                            Fullname = "Lê Văn C",
                            IsActive = true,
                            IsDeleted = false,
                            IsLocked = false,
                            Password = "$2a$11$LNROwf1mJ6XybRprV99CR.Q0rPiR5gOO/j/rL8KFSPp8XNPSipj2O",
                            Phone = "0911222333",
                            Status = 1,
                            UserCode = "USR003",
                            Username = "mem2"
                        });
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.Book.Book", b =>
                {
                    b.HasOne("LAB3_WEBAPP.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LAB3_WEBAPP.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.Loan", b =>
                {
                    b.HasOne("LAB3_WEBAPP.Models.Book.Book", "Book")
                        .WithMany("Loans")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LAB3_WEBAPP.Models.User", "User")
                        .WithMany("Loans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.UserRole", b =>
                {
                    b.HasOne("LAB3_WEBAPP.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LAB3_WEBAPP.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.Book.Book", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("LAB3_WEBAPP.Models.User", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
